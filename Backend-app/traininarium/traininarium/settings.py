"""
Django settings for traininarium project.
Generated by 'django-admin startproject' using Django 5.0.2.
For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from datetime import timedelta
from pathlib import Path
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-*(7j)_yrp@=b+11o1*_e$q@zr0g(jkyix%o)%e1^82j(!d1*t4'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = [os.getenv('SERVER_HOST', '127.0.0.1'), '127.0.0.1', '.localhost', '[::1]']
SITE_NAME = 'Traininarium'


# Application definition

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'rest_framework_simplejwt',
    'djoser',
    'core',
    'fitness',
    'health',
    'blog'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'traininarium.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'traininarium.wsgi.application'

REST_FRAMEWORK = {
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DATETIME_FORMAT': "%d.%m.%Y %H:%M:%S",
}

# CORS headers enable
CORS_ORIGIN_ALLOW_ALL = True  # Разрешить запросы от всех источников

# CORS_ORIGIN_WHITELIST = [
#     'http://localhost:3000',  # Добавьте здесь ваш домен React
# ]

# Custom user model
AUTH_USER_MODEL = 'core.User'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'HOST': os.getenv('POSTGRES_HOST', 'localhost'),
        'PORT': os.getenv('POSTGRES_PORT', 5432),
        'USER': os.getenv('POSTGRES_USER', 'admin'),
        'PASSWORD': os.getenv('POSTGRES_PASSWORD', 'admin'),
        'NAME': os.getenv('POSTGRES_DB', "traininarium_db")
    }
}
MAX_USER_DYNAMIC_INFO_TABLES = 50

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Email config
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_PORT = 465
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True

EMAIL_HOST_USER = 'Traininarium@yandex.ru'
EMAIL_HOST_PASSWORD = 'mceiyvfwtadewwdq'
DEFAULT_FROM_EMAIL = 'Traininarium@yandex.ru'

# Lifetime for activation code
CODE_LIFETIME = 3600             # seconds

# Djoser config
DJOSER = {
    'PERMISSIONS': {
        'reset_password_verify': ['rest_framework.permissions.AllowAny'],
        'user_delete': ['core.permissions.CurrentNonAdminUserOnly'],
        'ban': ['rest_framework.permissions.IsAdminUser'],
        'set_password': ['core.permissions.CurrentNoBanUserOrAdmin'],
        'set_username': ['core.permissions.CurrentNoBanUserOrAdmin'],
        'user': ['core.permissions.CurrentNoBanUserOrAdmin'],
        'user_list': ['core.permissions.CurrentNoBanUserOrAdmin'],
    },
    'SERIALIZERS': {
        'user': 'core.serializers.UserSerializer',
        'current_user': 'core.serializers.UserSerializer',
        'activation': 'core.serializers.ActivationSerializer',
        'user_create_password_retype': 'core.serializers.UserCreatePasswordRetypeSerializer',
        'password_reset_verify': 'core.serializers.PasswordResetVerifySerializer',
        'password_reset_confirm': 'core.serializers.PasswordResetConfirmSerializer',
        'password_reset_confirm_retype': 'core.serializers.PasswordResetConfirmRetypeSerializer',
        'ban': 'core.serializers.BanSerializer',
    },
    'USER_CREATE_PASSWORD_RETYPE': True,
    'SET_PASSWORD_RETYPE': True,
    'PASSWORD_RESET_CONFIRM_RETYPE': True,

    'SEND_ACTIVATION_EMAIL': True,

    'TOKEN_MODEL': None,
}

# Simple JWT settings config
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=1200),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
    "UPDATE_LAST_LOGIN": True,

    'AUTH_HEADER_TYPES': ('Bearer',),
    "SIGNING_KEY": SECRET_KEY,

    "TOKEN_OBTAIN_SERIALIZER": "core.serializers.TokenObtainPairCleanSerializer",
}

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGES = [
    ('ru', _('Russian')),
]
LANGUAGE_CODE = 'ru'
TIME_ZONE = 'Europe/Ulyanovsk'
USE_I18N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
